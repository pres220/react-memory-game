{"version":3,"sources":["Card.js","reducer.js","App.js","index.js"],"names":["Card","handleCardClick","card","isMatch","isMismatch","match","mismatch","flipped","isFlipped","onClick","id","name","className","trim","icon","cardList","shuffleCardList","i","length","j","Math","floor","random","temp","reducer","state","action","type","firstCard","flippedCards","secondCard","isBoardLocked","matchedCards","cards","filter","mismatchedCards","isModalOpen","undefined","library","add","fas","App","useReducer","dispatch","isMatched","find","matched","isMismatched","mismatched","useEffect","console","log","isOpen","ariaHideApp","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6976fc5.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Card({ handleCardClick, card, isMatch, isMismatch, isFlipped }) {\n  const match = isMatch ? \"match\" : \"\";\n  const mismatch = isMismatch ? \"mismatch\" : \"\";\n  const flipped = isFlipped || isMatch || isMismatch ? \"flipped\" : \"\";\n\n  return (\n    <div\n      onClick={() => handleCardClick(card.id, card.name)}\n      className={`card ${flipped} ${match}${mismatch}`.trim()}\n    >\n      <FontAwesomeIcon icon={card.name} />\n    </div>\n  );\n}\n\nexport default Card;","const cardList = [\n  { id: 1, name: \"dog\" },\n  { id: 2, name: \"dog\" },\n  { id: 3, name: \"dragon\" },\n  { id: 4, name: \"dragon\" },\n  { id: 5, name: \"fish\" },\n  { id: 6, name: \"fish\" },\n  { id: 7, name: \"frog\" },\n  { id: 8, name: \"frog\" },\n  { id: 9, name: \"hippo\" },\n  { id: 10, name: \"hippo\" },\n  { id: 11, name: \"kiwi-bird\" },\n  { id: 12, name: \"kiwi-bird\" },\n  { id: 13, name: \"horse-head\" },\n  { id: 14, name: \"horse-head\" },\n  { id: 15, name: \"cat\" },\n  { id: 16, name: \"cat\" }\n];\n\nfunction shuffleCardList(cardList) {\n  for (let i = cardList.length - 1; i >= 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = cardList[i];\n      cardList[i] = cardList[j];\n      cardList[j] = temp;\n  }\n\n  return cardList;\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case \"SET_FIRST_CARD\":\n      return {\n        ...state,\n        firstCard: action.firstCard,\n        flippedCards: [action.firstCard]\n      }\n    case \"SET_SECOND_CARD\":\n      return {\n        ...state,\n        secondCard: action.secondCard,\n        flippedCards: [...state.flippedCards, action.secondCard]\n      }\n    case \"SET_BOARD_LOCK\":\n      return {\n        ...state,\n        isBoardLocked: action.isBoardLocked\n      }\n    case \"SET_MATCHES\":\n      return {\n        ...state,\n        matchedCards: [\n          ...state.matchedCards,\n          ...state.cards.filter(card => card.name === state.firstCard.name)\n        ]\n      }\n    case \"SET_MISMATCHES\":\n      return {\n        ...state,\n        mismatchedCards: state.cards.filter(card => card.id === state.firstCard.id || card.id === state.secondCard.id)\n      }\n    case \"UNSET_MISMATCHES\":\n      return {\n        ...state,\n        mismatchedCards: []\n      }\n    case \"OPEN_MODAL\":\n      return {\n        ...state,\n        isModalOpen: true\n      }\n    case \"RESET_GAME\":\n      return {\n        firstCard: { id: undefined, name: \"\" },\n        secondCard: { id: undefined, name: \"\" },\n        cards: [...shuffleCardList(cardList)],\n        matchedCards: [],\n        mismatchedCards: [],\n        flippedCards: [],\n        isModalOpen: false,\n        isBoardLocked: false\n      }\n    default:\n      return state\n  }\n}\n\nexport { reducer, cardList, shuffleCardList };","import React, { useEffect, useReducer } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Modal from \"react-modal\";\nimport Card from \"./Card\";\nimport { reducer, cardList, shuffleCardList } from \"./reducer\";\n\nlibrary.add(fas);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, {\n      firstCard: { id: undefined, name: \"\" },\n      secondCard: { id: undefined, name: \"\" },\n      cards: [...shuffleCardList(cardList)],\n      matchedCards: [],\n      mismatchedCards: [],\n      flippedCards: [],\n      isModalOpen: false,\n      isBoardLocked: false\n    }\n  );\n\n  function handleCardClick(id, name) {\n    const isMatched = state.matchedCards.find(matched => matched.id === id);\n    const isMismatched = state.mismatchedCards.find(mismatched => mismatched.id === id);\n\n    if (state.isBoardLocked || id === state.firstCard.id || id === state.secondCard.id || isMatched || isMismatched) {\n      return;\n    }\n\n    if (state.mismatchedCards.length > 0) {\n      dispatch({ type: 'UNSET_MISMATCHES' });\n    }\n\n    if (!state.firstCard.id) {\n      dispatch({ type: \"SET_FIRST_CARD\", firstCard: { id, name } });\n    } else {\n      dispatch({ type: \"SET_SECOND_CARD\", secondCard: { id, name } });\n    }\n  }\n\n  function checkForMatchingCards() {\n    if (!state.firstCard.id || !state.secondCard.id) {\n      return;\n    }\n\n    dispatch({ type: \"SET_BOARD_LOCK\", isBoardLocked: true });\n\n    if (state.firstCard.name === state.secondCard.name) {\n      dispatch({ type: \"SET_MATCHES\" });\n      dispatch({ type: \"SET_BOARD_LOCK\", isBoardLocked: false })\n    } else {\n      dispatch({ type: \"SET_MISMATCHES\" })\n      dispatch({ type: \"SET_BOARD_LOCK\", isBoardLocked: false })\n    }\n\n    dispatch({ type: \"SET_FIRST_CARD\", firstCard: { id: undefined, name: \"\" } })\n    dispatch({ type: \"SET_SECOND_CARD\", secondCard: { id: undefined, name: \"\" } })\n  }\n\n  useEffect(checkForMatchingCards, [state.firstCard, state.secondCard]);\n\n  useEffect(() => {\n    if (state.matchedCards.length === state.cards.length) {\n      dispatch({ type: \"OPEN_MODAL\" });\n    }\n  }, [state.matchedCards, state.cards]);\n\n  console.log(state);\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Memory Game</h1>\n      </header>\n      <Modal\n        isOpen={state.isModalOpen}\n        className=\"modal\"\n        ariaHideApp={false}\n      >\n        <div className=\"message\">\n          <button onClick={() => dispatch({ type: \"RESET_GAME\" })}>Close</button>\n          <h1>You Win!</h1>\n          <FontAwesomeIcon icon=\"trophy\"/>\n        </div>\n      </Modal>\n      <section>\n        <ul className=\"board\">\n          {\n            state.cards.map(card => {\n              const isMatch = state.matchedCards.find(matched => matched.name === card.name);\n              const isMismatch = state.mismatchedCards.find(mismatched => mismatched.id === card.id);\n              const isFlipped = state.flippedCards.find(flipped => flipped.id === card.id);\n\n              return (\n                <li key={card.id}>\n                  <Card\n                    handleCardClick={handleCardClick}\n                    card={card}\n                    isMatch={isMatch}\n                    isMismatch={isMismatch}\n                    isFlipped={isFlipped}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}